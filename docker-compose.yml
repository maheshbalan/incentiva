version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: incentiva-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: incentiva_dev
      POSTGRES_USER: incentiva
      POSTGRES_PASSWORD: incentiva
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U incentiva -d incentiva_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - incentiva-network

  # Backend API + Frontend
  app:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: incentiva-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://incentiva:incentiva@postgres:5432/incentiva_dev
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - incentiva-network
    command: sh -c "npx prisma migrate deploy && npm start"

  # Nginx (optional - for production)
  nginx:
    image: nginx:alpine
    container_name: incentiva-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - incentiva-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local

networks:
  incentiva-network:
    driver: bridge